// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Classes.proto

#include "Classes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class Time_TecnicoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Time_Tecnico>
      _instance;
} _Time_Tecnico_default_instance_;
class TimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Time>
      _instance;
} _Time_default_instance_;
class AtletaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Atleta>
      _instance;
} _Atleta_default_instance_;
namespace protobuf_Classes_2eproto {
static void InitDefaultsTime_Tecnico() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Time_Tecnico_default_instance_;
    new (ptr) ::Time_Tecnico();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Time_Tecnico::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Time_Tecnico =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTime_Tecnico}, {}};

static void InitDefaultsTime() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Time_default_instance_;
    new (ptr) ::Time();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Time::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Time =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTime}, {}};

static void InitDefaultsAtleta() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Atleta_default_instance_;
    new (ptr) ::Atleta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Atleta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Atleta =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAtleta}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Time_Tecnico.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Time.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Atleta.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Time_Tecnico, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Time_Tecnico, nome_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Time_Tecnico, idade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Time_Tecnico, qtdtitulos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Time, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Time, nome_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Time, tecnico_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Time, pontos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Time, qtdjogos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Atleta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Atleta, nome_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Atleta, posicao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Atleta, numcamisa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Atleta, qtdtitulos_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Time_Tecnico)},
  { 8, -1, sizeof(::Time)},
  { 17, -1, sizeof(::Atleta)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Time_Tecnico_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Time_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Atleta_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Classes.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rClasses.proto\"\203\001\n\004Time\022\014\n\004nome\030\001 \001(\t\022\017"
      "\n\007tecnico\030\002 \001(\t\022\016\n\006pontos\030\003 \001(\005\022\020\n\010qtdJo"
      "gos\030\004 \001(\005\032:\n\007Tecnico\022\014\n\004nome\030\001 \001(\t\022\r\n\005id"
      "ade\030\002 \001(\005\022\022\n\nqtdTitulos\030\003 \001(\005\"N\n\006Atleta\022"
      "\014\n\004nome\030\001 \001(\t\022\017\n\007posicao\030\002 \001(\t\022\021\n\tnumCam"
      "isa\030\003 \001(\005\022\022\n\nqtdTitulos\030\004 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 237);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Classes.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Classes_2eproto

// ===================================================================

void Time_Tecnico::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Time_Tecnico::kNomeFieldNumber;
const int Time_Tecnico::kIdadeFieldNumber;
const int Time_Tecnico::kQtdTitulosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Time_Tecnico::Time_Tecnico()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Classes_2eproto::scc_info_Time_Tecnico.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Time.Tecnico)
}
Time_Tecnico::Time_Tecnico(const Time_Tecnico& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nome().size() > 0) {
    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  ::memcpy(&idade_, &from.idade_,
    static_cast<size_t>(reinterpret_cast<char*>(&qtdtitulos_) -
    reinterpret_cast<char*>(&idade_)) + sizeof(qtdtitulos_));
  // @@protoc_insertion_point(copy_constructor:Time.Tecnico)
}

void Time_Tecnico::SharedCtor() {
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&idade_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qtdtitulos_) -
      reinterpret_cast<char*>(&idade_)) + sizeof(qtdtitulos_));
}

Time_Tecnico::~Time_Tecnico() {
  // @@protoc_insertion_point(destructor:Time.Tecnico)
  SharedDtor();
}

void Time_Tecnico::SharedDtor() {
  nome_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Time_Tecnico::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Time_Tecnico::descriptor() {
  ::protobuf_Classes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Classes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Time_Tecnico& Time_Tecnico::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Classes_2eproto::scc_info_Time_Tecnico.base);
  return *internal_default_instance();
}


void Time_Tecnico::Clear() {
// @@protoc_insertion_point(message_clear_start:Time.Tecnico)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&idade_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qtdtitulos_) -
      reinterpret_cast<char*>(&idade_)) + sizeof(qtdtitulos_));
  _internal_metadata_.Clear();
}

bool Time_Tecnico::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Time.Tecnico)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nome = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nome()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nome().data(), static_cast<int>(this->nome().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Time.Tecnico.nome"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 idade = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 qtdTitulos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qtdtitulos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Time.Tecnico)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Time.Tecnico)
  return false;
#undef DO_
}

void Time_Tecnico::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Time.Tecnico)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nome = 1;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Time.Tecnico.nome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nome(), output);
  }

  // int32 idade = 2;
  if (this->idade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->idade(), output);
  }

  // int32 qtdTitulos = 3;
  if (this->qtdtitulos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qtdtitulos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Time.Tecnico)
}

::google::protobuf::uint8* Time_Tecnico::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Time.Tecnico)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nome = 1;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Time.Tecnico.nome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nome(), target);
  }

  // int32 idade = 2;
  if (this->idade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->idade(), target);
  }

  // int32 qtdTitulos = 3;
  if (this->qtdtitulos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qtdtitulos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Time.Tecnico)
  return target;
}

size_t Time_Tecnico::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Time.Tecnico)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nome = 1;
  if (this->nome().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nome());
  }

  // int32 idade = 2;
  if (this->idade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idade());
  }

  // int32 qtdTitulos = 3;
  if (this->qtdtitulos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->qtdtitulos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Time_Tecnico::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Time.Tecnico)
  GOOGLE_DCHECK_NE(&from, this);
  const Time_Tecnico* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Time_Tecnico>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Time.Tecnico)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Time.Tecnico)
    MergeFrom(*source);
  }
}

void Time_Tecnico::MergeFrom(const Time_Tecnico& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Time.Tecnico)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nome().size() > 0) {

    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  if (from.idade() != 0) {
    set_idade(from.idade());
  }
  if (from.qtdtitulos() != 0) {
    set_qtdtitulos(from.qtdtitulos());
  }
}

void Time_Tecnico::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Time.Tecnico)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Time_Tecnico::CopyFrom(const Time_Tecnico& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Time.Tecnico)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Time_Tecnico::IsInitialized() const {
  return true;
}

void Time_Tecnico::Swap(Time_Tecnico* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Time_Tecnico::InternalSwap(Time_Tecnico* other) {
  using std::swap;
  nome_.Swap(&other->nome_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(idade_, other->idade_);
  swap(qtdtitulos_, other->qtdtitulos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Time_Tecnico::GetMetadata() const {
  protobuf_Classes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Classes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Time::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Time::kNomeFieldNumber;
const int Time::kTecnicoFieldNumber;
const int Time::kPontosFieldNumber;
const int Time::kQtdJogosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Time::Time()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Classes_2eproto::scc_info_Time.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Time)
}
Time::Time(const Time& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nome().size() > 0) {
    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  tecnico_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tecnico().size() > 0) {
    tecnico_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tecnico_);
  }
  ::memcpy(&pontos_, &from.pontos_,
    static_cast<size_t>(reinterpret_cast<char*>(&qtdjogos_) -
    reinterpret_cast<char*>(&pontos_)) + sizeof(qtdjogos_));
  // @@protoc_insertion_point(copy_constructor:Time)
}

void Time::SharedCtor() {
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tecnico_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pontos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qtdjogos_) -
      reinterpret_cast<char*>(&pontos_)) + sizeof(qtdjogos_));
}

Time::~Time() {
  // @@protoc_insertion_point(destructor:Time)
  SharedDtor();
}

void Time::SharedDtor() {
  nome_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tecnico_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Time::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Time::descriptor() {
  ::protobuf_Classes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Classes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Time& Time::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Classes_2eproto::scc_info_Time.base);
  return *internal_default_instance();
}


void Time::Clear() {
// @@protoc_insertion_point(message_clear_start:Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tecnico_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pontos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qtdjogos_) -
      reinterpret_cast<char*>(&pontos_)) + sizeof(qtdjogos_));
  _internal_metadata_.Clear();
}

bool Time::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Time)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nome = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nome()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nome().data(), static_cast<int>(this->nome().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Time.nome"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tecnico = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tecnico()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tecnico().data(), static_cast<int>(this->tecnico().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Time.tecnico"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pontos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pontos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 qtdJogos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qtdjogos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Time)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Time)
  return false;
#undef DO_
}

void Time::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nome = 1;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Time.nome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nome(), output);
  }

  // string tecnico = 2;
  if (this->tecnico().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tecnico().data(), static_cast<int>(this->tecnico().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Time.tecnico");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tecnico(), output);
  }

  // int32 pontos = 3;
  if (this->pontos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pontos(), output);
  }

  // int32 qtdJogos = 4;
  if (this->qtdjogos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qtdjogos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Time)
}

::google::protobuf::uint8* Time::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nome = 1;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Time.nome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nome(), target);
  }

  // string tecnico = 2;
  if (this->tecnico().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tecnico().data(), static_cast<int>(this->tecnico().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Time.tecnico");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tecnico(), target);
  }

  // int32 pontos = 3;
  if (this->pontos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pontos(), target);
  }

  // int32 qtdJogos = 4;
  if (this->qtdjogos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qtdjogos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Time)
  return target;
}

size_t Time::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Time)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nome = 1;
  if (this->nome().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nome());
  }

  // string tecnico = 2;
  if (this->tecnico().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tecnico());
  }

  // int32 pontos = 3;
  if (this->pontos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pontos());
  }

  // int32 qtdJogos = 4;
  if (this->qtdjogos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->qtdjogos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Time::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Time)
  GOOGLE_DCHECK_NE(&from, this);
  const Time* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Time>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Time)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Time)
    MergeFrom(*source);
  }
}

void Time::MergeFrom(const Time& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Time)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nome().size() > 0) {

    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  if (from.tecnico().size() > 0) {

    tecnico_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tecnico_);
  }
  if (from.pontos() != 0) {
    set_pontos(from.pontos());
  }
  if (from.qtdjogos() != 0) {
    set_qtdjogos(from.qtdjogos());
  }
}

void Time::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Time::CopyFrom(const Time& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Time::IsInitialized() const {
  return true;
}

void Time::Swap(Time* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Time::InternalSwap(Time* other) {
  using std::swap;
  nome_.Swap(&other->nome_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tecnico_.Swap(&other->tecnico_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pontos_, other->pontos_);
  swap(qtdjogos_, other->qtdjogos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Time::GetMetadata() const {
  protobuf_Classes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Classes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Atleta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Atleta::kNomeFieldNumber;
const int Atleta::kPosicaoFieldNumber;
const int Atleta::kNumCamisaFieldNumber;
const int Atleta::kQtdTitulosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Atleta::Atleta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Classes_2eproto::scc_info_Atleta.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Atleta)
}
Atleta::Atleta(const Atleta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nome().size() > 0) {
    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  posicao_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.posicao().size() > 0) {
    posicao_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posicao_);
  }
  ::memcpy(&numcamisa_, &from.numcamisa_,
    static_cast<size_t>(reinterpret_cast<char*>(&qtdtitulos_) -
    reinterpret_cast<char*>(&numcamisa_)) + sizeof(qtdtitulos_));
  // @@protoc_insertion_point(copy_constructor:Atleta)
}

void Atleta::SharedCtor() {
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posicao_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&numcamisa_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qtdtitulos_) -
      reinterpret_cast<char*>(&numcamisa_)) + sizeof(qtdtitulos_));
}

Atleta::~Atleta() {
  // @@protoc_insertion_point(destructor:Atleta)
  SharedDtor();
}

void Atleta::SharedDtor() {
  nome_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posicao_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Atleta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Atleta::descriptor() {
  ::protobuf_Classes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Classes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Atleta& Atleta::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Classes_2eproto::scc_info_Atleta.base);
  return *internal_default_instance();
}


void Atleta::Clear() {
// @@protoc_insertion_point(message_clear_start:Atleta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posicao_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&numcamisa_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qtdtitulos_) -
      reinterpret_cast<char*>(&numcamisa_)) + sizeof(qtdtitulos_));
  _internal_metadata_.Clear();
}

bool Atleta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Atleta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nome = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nome()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nome().data(), static_cast<int>(this->nome().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Atleta.nome"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string posicao = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_posicao()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->posicao().data(), static_cast<int>(this->posicao().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Atleta.posicao"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 numCamisa = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numcamisa_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 qtdTitulos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qtdtitulos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Atleta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Atleta)
  return false;
#undef DO_
}

void Atleta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Atleta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nome = 1;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Atleta.nome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nome(), output);
  }

  // string posicao = 2;
  if (this->posicao().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->posicao().data(), static_cast<int>(this->posicao().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Atleta.posicao");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->posicao(), output);
  }

  // int32 numCamisa = 3;
  if (this->numcamisa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->numcamisa(), output);
  }

  // int32 qtdTitulos = 4;
  if (this->qtdtitulos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qtdtitulos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Atleta)
}

::google::protobuf::uint8* Atleta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Atleta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nome = 1;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Atleta.nome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nome(), target);
  }

  // string posicao = 2;
  if (this->posicao().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->posicao().data(), static_cast<int>(this->posicao().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Atleta.posicao");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->posicao(), target);
  }

  // int32 numCamisa = 3;
  if (this->numcamisa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->numcamisa(), target);
  }

  // int32 qtdTitulos = 4;
  if (this->qtdtitulos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qtdtitulos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Atleta)
  return target;
}

size_t Atleta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Atleta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nome = 1;
  if (this->nome().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nome());
  }

  // string posicao = 2;
  if (this->posicao().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->posicao());
  }

  // int32 numCamisa = 3;
  if (this->numcamisa() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numcamisa());
  }

  // int32 qtdTitulos = 4;
  if (this->qtdtitulos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->qtdtitulos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Atleta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Atleta)
  GOOGLE_DCHECK_NE(&from, this);
  const Atleta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Atleta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Atleta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Atleta)
    MergeFrom(*source);
  }
}

void Atleta::MergeFrom(const Atleta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Atleta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nome().size() > 0) {

    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  if (from.posicao().size() > 0) {

    posicao_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posicao_);
  }
  if (from.numcamisa() != 0) {
    set_numcamisa(from.numcamisa());
  }
  if (from.qtdtitulos() != 0) {
    set_qtdtitulos(from.qtdtitulos());
  }
}

void Atleta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Atleta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Atleta::CopyFrom(const Atleta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Atleta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Atleta::IsInitialized() const {
  return true;
}

void Atleta::Swap(Atleta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Atleta::InternalSwap(Atleta* other) {
  using std::swap;
  nome_.Swap(&other->nome_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  posicao_.Swap(&other->posicao_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(numcamisa_, other->numcamisa_);
  swap(qtdtitulos_, other->qtdtitulos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Atleta::GetMetadata() const {
  protobuf_Classes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Classes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Time_Tecnico* Arena::CreateMaybeMessage< ::Time_Tecnico >(Arena* arena) {
  return Arena::CreateInternal< ::Time_Tecnico >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Time* Arena::CreateMaybeMessage< ::Time >(Arena* arena) {
  return Arena::CreateInternal< ::Time >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Atleta* Arena::CreateMaybeMessage< ::Atleta >(Arena* arena) {
  return Arena::CreateInternal< ::Atleta >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
